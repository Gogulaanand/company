{"version":3,"sources":["components/assets/contact.svg","components/contacts.js"],"names":["module","exports","Contact","props","useState","name","email","phone","comments","form","setForm","submitLoading","setLoading","formRef","setFormRef","useEffect","layout","labelCol","span","wrapperCol","handleChange","e","target","value","id","type","style","border","height","onFinish","values","templateParams","from_name","to_name","message_html","emailjs","send","process","then","resp","status","notification","open","message","description","icon","resetFields","catch","console","log","ref","f","Item","label","placeholder","onChange","TextArea","role","offset","htmlType","loading","src","conversation","alt"],"mappings":"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","file":"static/js/5.045dadde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/contact.b42f27f8.svg\";","import React, { useState, useEffect } from 'react'\nimport { Form, Input, Button, Divider, notification } from 'antd'\nimport emailjs from 'emailjs-com'\nimport './contacts.scss'\nimport conversation from './assets/contact.svg'\n\nfunction Contact(props){\n\n  const [form, setForm] = useState({ name: \"\", email: \"\", phone: \"\", comments: \"\" })\n  const [submitLoading, setLoading] = useState(false)\n  const [formRef, setFormRef] = useState(null)\n\n  useEffect(() => {}, [submitLoading, form])\n\n  const layout = {\n    labelCol: {\n      span: 4,\n    },\n    wrapperCol: {\n      span: 12,\n    },\n  };\n\n  const dividerStyle = {\n    border: '1px solid #dddddd',\n    height: '300px'\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setForm({...form, [name]: value})\n  }\n\n  const onFinish = (values) => {\n    // do nothing if a form is being submitted currently\n    if(submitLoading) return;\n    setLoading(true)\n\n    let templateParams = {\n      from_name: form.name,\n      to_name: 'Company',\n      message_html: `<table>\n                      <tr><th>Subject</th><td>${form.name} contacting from Company website</td></tr>\n                      <tr><th>Phone</th><td>${form.phone}</td></tr>\n                      <tr><th>Email</th><td>${form.email}</td></tr>\n                      <tr><th>Message</th><td>${form.comments}</td></tr>`\n\n    }\n    setForm({ name: \"\", email: \"\", phone: \"\", comments: \"\"})\n    emailjs.send(\n      'gmail', \n      process.env.REACT_APP_EMAILJS_TEMPLATE_ID,\n      templateParams,\n      process.env.REACT_APP_EMAILJS_USER_ID\n    ).then((resp) => {\n      if(resp.status===200){\n        notification.open({\n          message: 'Message sent successfully!',\n          description: 'We will get you back to you shortly',\n          icon: 'ðŸš€'\n        })\n        //reset form status\n        formRef.resetFields()\n        setLoading(false)\n      }\n    }).catch(e => {\n      console.log(e)\n      notification.open({\n        message: 'Something went wrong, pls try after sometime!',\n        icon: 'ðŸ‘»'\n      })\n    })\n  }\n\n  return(\n    <div id='contact'>\n      <div id='contact-leftPane'>\n        <h2 id='contact-title'>Contact Us</h2>\n        <h5>Phone : +123 456 789</h5>\n      </div>\n      <Divider type=\"vertical\" id=\"contact-divider\" style={dividerStyle}/>\n      <div id='contact-rightPane'>\n        <Form {...layout} name='nest-messages' onFinish={onFinish} id='contact-form' ref={f => setFormRef(f)}>\n          <Form.Item label='Name' name={['user', 'name']}>\n            <Input placeholder='Name' name='name' value={form.name} onChange={e => handleChange(e)}/>\n          </Form.Item>\n          <Form.Item label='Email' name={['user', 'email']}>\n            <Input placeholder='Email ID' name='email' type='email' value={form.email} onChange={e => handleChange(e)}/>\n          </Form.Item>\n          <Form.Item label='Phone' name={['user', 'number']}>\n            <Input placeholder='Phone' name='phone' value={form.phone} onChange={e => handleChange(e)}/>\n          </Form.Item>\n          <Form.Item label='Comments' name={['user', 'comments']}>\n            <Input.TextArea placeholder='Tell us what you are looking for !' name='comments' value={form.comments} onChange={e => handleChange(e)} />\n          </Form.Item>\n          <p role='status'></p>\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset:4 }}>\n            <Button type='primary' htmlType='submit' loading={submitLoading} id='form-submitButton'>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n      <img src={conversation} alt='send us an email illustration' id='contact-img'/>\n    </div>\n  )\n}\n\nexport default Contact"],"sourceRoot":""}