{"version":3,"sources":["components/whiteFlowers.jpg","components/home.js","components/header.js","components/products.js","components/contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","id","Header","active","href","Products","contentStyle","height","color","lineHeight","textAlign","background","settings","dots","infinite","slidesToScroll","autoplay","autoplaySpeed","nextArrow","ArrowRightOutlined","previousArrow","ArrowLeftOutlined","cssEase","style","className","src","whiteFlower","alt","Contact","useState","name","setName","email","setEmail","phone","setPhone","comments","setComments","layout","labelCol","span","wrapperCol","type","onSubmit","e","preventDefault","templateParams","from_name","to_name","subject","message_html","emailjs","send","Item","label","placeholder","onChange","target","value","TextArea","offset","htmlType","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,0C,+OCc5BC,MAXf,SAAcC,GACZ,OACE,yBAAKC,GAAG,QACR,yCACA,kEACA,uHACA,iI,iBCkBWC,MAtBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,QAAM,EAACC,KAAK,SAArB,SAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASD,QAAM,EAACC,KAAK,aAArB,aAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASD,QAAM,EAACC,KAAK,YAArB,c,sDCyCOC,MArDf,SAAkBL,GAEhB,IAAMM,EAAe,CACnBC,OAAQ,QACRC,MAAO,OACPC,WAAY,QACZC,UAAW,SACXC,WAAY,WAGRC,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,eAAgB,EAChBC,UAAU,EACVC,cAAe,IACfC,UAAW,kBAACC,EAAA,EAAD,MACXC,cAAe,kBAACC,EAAA,EAAD,MACfC,QAAS,UAGX,OACE,yBAAKrB,GAAG,YACR,kBAAC,IAAD,iBAAcW,EAAd,CAAwBX,GAAG,aACzB,6BACE,yBAAKsB,MAAOjB,EAAckB,UAAU,eAClC,yBAAKD,MAAOjB,EAAcmB,IAAKC,IAAaC,IAAI,eAAeH,UAAU,eACzE,uBAAGA,UAAU,gBAAb,eAGJ,6BACE,wBAAID,MAAOjB,GAAX,MAGF,6BACE,wBAAIiB,MAAOjB,GAAX,MAGF,6BACE,wBAAIiB,MAAOjB,GAAX,MAGF,6BACE,wBAAIiB,MAAOjB,GAAX,MAEF,6BACE,wBAAIiB,MAAOjB,GAAX,S,gFCqBOsB,MArEf,SAAiB5B,GAAO,IAAD,EAEG6B,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,OAGKF,mBAAS,IAHd,mBAGdG,EAHc,KAGPC,EAHO,OAIKJ,mBAAS,GAJd,mBAIdK,EAJc,KAIPC,EAJO,OAKWN,mBAAS,IALpB,mBAKdO,EALc,KAKJC,EALI,KAOfC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAyBV,OACE,yBAAKvC,GAAG,WACN,yBAAKA,GAAG,oBACN,wBAAIA,GAAG,iBAAP,cACA,qDAEF,kBAAC,IAAD,CAASyC,KAAK,aACd,yBAAKzC,GAAG,qBACN,kBAAC,IAAD,iBAAUqC,EAAV,CAAkBR,KAAK,gBAAgBa,SA7BxB,SAACC,GACpBA,EAAEC,iBACF,IAAIC,EAAiB,CACnBC,UAAWf,EACXgB,QAAS,OACTC,QAAQ,GAAD,OAAKnB,EAAL,oCACPoB,aAAa,GAAD,OAAKd,EAAL,yCACYF,IAE1BH,EAAQ,IACRE,EAAS,IACTE,EAAS,MACTE,EAAY,IACZc,IAAQC,KACN,QACA,oBACAN,EACA,iCAaI,kBAAC,IAAKO,KAAN,CAAWC,MAAM,OAAOxB,KAAM,CAAC,OAAQ,SACrC,kBAAC,IAAD,CAAOyB,YAAY,OAAOC,SAAU,SAAAZ,GAAC,OAAIb,EAAQa,EAAEa,OAAOC,WAE5D,kBAAC,IAAKL,KAAN,CAAWC,MAAM,QAAQxB,KAAM,CAAC,OAAQ,UACtC,kBAAC,IAAD,CAAOyB,YAAY,WAAWC,SAAU,SAAAZ,GAAC,OAAIX,EAASW,EAAEa,OAAOC,WAEjE,kBAAC,IAAKL,KAAN,CAAWC,MAAM,QAAQxB,KAAM,CAAC,OAAQ,WACtC,kBAAC,IAAD,CAAOyB,YAAY,QAAQC,SAAU,SAAAZ,GAAC,OAAIT,EAASS,EAAEa,OAAOC,WAE9D,kBAAC,IAAKL,KAAN,CAAWC,MAAM,WAAWxB,KAAM,CAAC,OAAQ,aACzC,kBAAC,IAAM6B,SAAP,CAAgBJ,YAAY,qCAAqCC,SAAU,SAAAZ,GAAC,OAAIP,EAAYO,EAAEa,OAAOC,WAEvG,kBAAC,IAAKL,KAAN,CAAWZ,WAAU,2BAAOH,EAAOG,YAAd,IAA0BmB,OAAO,KACpD,kBAAC,IAAD,CAAQlB,KAAK,UAAUmB,SAAS,UAAhC,e,cC5CGC,MAXf,WACE,OACE,yBAAKtC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHcuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e1e6bf1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiteFlowers.65542a29.jpg\";","import React from 'react'\n\n\nfunction Home(props){\n  return(\n    <div id=\"home\">\n    <h1>Hi There!</h1>\n    <p>We have are happy to have you here!</p>\n    <p>We are a garment and textile manufacturing company with more than 20 years of expertise.</p>\n    <p> We have been exporting to countries like Nigeria, Sri Lanka and multiple locations within India</p>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\n// import { Link } from 'react-router-dom'\nimport './header.scss'\nimport { Nav, NavLink, NavItem } from 'shards-react'\n\nfunction Header(){\n  return(\n    <Nav>\n      <NavItem>\n        <NavLink active href='#home'>\n          Home\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink active href='#products'>\n          Products\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink active href='#contact'>\n          Contact\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport  { Carousel } from 'antd'\nimport './products.scss'\nimport { ArrowRightOutlined, ArrowLeftOutlined }  from '@ant-design/icons'\nimport whiteFlower from './whiteFlowers.jpg'\n// import Slider from 'react-slick'\n\nfunction Products(props){\n\n  const contentStyle = {\n    height: '460px',\n    color: '#fff',\n    lineHeight: '460px',\n    textAlign: 'center',\n    background: '#364d79',\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    nextArrow: <ArrowRightOutlined />,\n    previousArrow: <ArrowLeftOutlined/>,\n    cssEase: 'linear'\n  }\n\n  return(\n    <div id='products'>\n    <Carousel {...settings} id='carousel'>\n      <div>\n        <div style={contentStyle} className='displayItem'>\n          <img style={contentStyle} src={whiteFlower} alt='white flower' className='displayImg'/>\n          <p className='product-desc'>Product 1</p>\n        </div>\n      </div>\n      <div>\n        <h3 style={contentStyle}>1</h3>\n      </div>\n\n      <div>\n        <h3 style={contentStyle}>2</h3>\n      </div>\n\n      <div>\n        <h3 style={contentStyle}>3</h3>\n      </div>\n\n      <div>\n        <h3 style={contentStyle}>4</h3>\n      </div>\n      <div>\n        <h3 style={contentStyle}>5</h3>\n      </div>\n    </Carousel>\n    </div>\n  )\n}\n\nexport default Products","import React, { useState } from 'react'\nimport { Form, Input, Button, Divider } from 'antd'\nimport './contacts.scss'\nimport emailjs from 'emailjs-com'\n\nfunction Contact(props){\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState(0)\n  const [comments, setComments] = useState('')\n\n  const layout = {\n    labelCol: {\n      span: 4,\n    },\n    wrapperCol: {\n      span: 8,\n    },\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let templateParams = {\n      from_name: email,\n      to_name: 'Bell',\n      subject: `${name} contacting from Company website`,\n      message_html: `${comments}\n                     Phone: ${phone}`\n    }\n    setName('')\n    setEmail('')\n    setPhone(null)\n    setComments('')\n    emailjs.send(\n      'gmail', \n      'template_luOZdH2O',\n      templateParams,\n      'user_5Vl91CUzguX2jndTfJfYE'\n    )\n  }\n\n  return(\n    <div id='contact'>\n      <div id='contact-leftPane'>\n        <h2 id='contact-title'>Contact Us</h2>\n        <h5>Phone : +123 456 789</h5>\n      </div>\n      <Divider type='vertical' />\n      <div id='contact-rightPane'>\n        <Form {...layout} name='nest-messages' onSubmit={handleSubmit}>\n          <Form.Item label='Name' name={['user', 'name']}>\n            <Input placeholder='Name' onChange={e => setName(e.target.value)}/>\n          </Form.Item>\n          <Form.Item label='Email' name={['user', 'email']}>\n            <Input placeholder='Email ID' onChange={e => setEmail(e.target.value)} />\n          </Form.Item>\n          <Form.Item label='Phone' name={['user', 'number']}>\n            <Input placeholder='Phone' onChange={e => setPhone(e.target.value)}/>\n          </Form.Item>\n          <Form.Item label='Comments' name={['user', 'comments']}>\n            <Input.TextArea placeholder='Tell us what you are looking for !' onChange={e => setComments(e.target.value)} />\n          </Form.Item>\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset:4 }}>\n            <Button type='primary' htmlType='submit'>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Contact","import React from 'react';\nimport './App.css';\nimport Home from './components/home'\nimport Header from './components/header'\nimport Products from './components/products'\nimport Contact from './components/contacts'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home/>\n      <Products/>\n      <Contact/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}